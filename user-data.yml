#cloud-config

---
coreos:
  etcd:
    discovery: https://discovery.etcd.io/03dcf71e4ec0bbf8119a23b49184edcd
    addr: $private_ipv4:4001
    peer-addr: $private_ipv4:7001
  fleet:
    public-ip: $private_ipv4
  units:
  - name: etcd.service
    command: start
  - name: fleet.service
    command: start
  - name: database-data.service
    enable: true
    content: |
      [Unit]
      Description=PostgreSQL database persistent storage
      After=docker.service
      Requires=docker.service

      [Install]
      WantedBy=multi-user.target

      [Service]
      TimeoutStartSec=0
      ExecStart=/usr/bin/docker run --name %p                         \
                                    --volume /var/lib/postgresql/data \
                                      busybox /usr/bin/tail -f /dev/null
  - name: database.service
    enable: true
    content: |
      [Unit]
      Description=PostgreSQL container
      After=%p-data.service
      Requires=%p-data.service

      [Install]
      WantedBy=multi-user.target

      [Service]
      Restart=always
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker kill %p
      ExecStartPre=-/usr/bin/docker rm %p
      ExecStartPre=/usr/bin/docker pull postgres:9.4
      ExecStart=/usr/bin/docker run --name %p                 \
                                    --volumes-from %p-data    \
                                    --env POSTGRES_USER=drone \
                                      postgres
      ExecStop=/usr/bin/docker stop %p
  - name: drone.service
    enable: true
    content: |
      [Unit]
      Description=Drone CI container
      Requires=database.service
      After=database.service

      [Install]
      WantedBy=multi-user.target

      [Service]
      Restart=always
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker kill %p
      ExecStartPre=-/usr/bin/docker rm %p
      ExecStartPre=/usr/bin/docker pull drone/drone:latest
      ExecStart=/usr/bin/docker run --name %p                                          \
                                    --link database:db -p 80:80                        \
                                    --volume /home/core/drone.toml:/etc/drone.toml     \
                                    --volume /var/run/docker.sock:/var/run/docker.sock \
                                      drone/drone -config=/etc/drone.toml
      ExecStop=/usr/bin/docker stop %p
write_files:
- path: /home/core/drone.toml
  permissions: '0600'
  content: |
    [github]
    client = "" # GitHub application ID
    secret = "" # GitHub application secret
    orgs = ["yourGitHubOrganisation"]

    [worker]
    nodes=[
      "unix:///var/run/docker.sock",
      "unix:///var/run/docker.sock",
      "unix:///var/run/docker.sock",
      "unix:///var/run/docker.sock"
    ]

    [database]
    driver = "postgres"
    datasource = "host=db user=drone dbname=drone sslmode=disable"
